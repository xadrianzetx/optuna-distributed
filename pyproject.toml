[build-system]
requires = ["setuptools", "setuptools-scm"]
build-backend = "setuptools.build_meta"

[project]
name = "optuna-distributed"
description = "Distributed hyperparameter optimization made easy"
authors = [
  { name = "Adrian Zuber", email = "xadrianzetx@gmail.com" },
]
requires-python = ">=3.8"
license = { text = "MIT" }
classifiers = [
  "Development Status :: 4 - Beta",
  "Intended Audience :: Science/Research",
  "Intended Audience :: Developers",
  "License :: OSI Approved :: MIT License",
  "Programming Language :: Python :: 3",
  "Programming Language :: Python :: 3.8",
  "Programming Language :: Python :: 3.9",
  "Programming Language :: Python :: 3.10",
  "Programming Language :: Python :: 3.11",
  "Programming Language :: Python :: 3 :: Only",
  "Topic :: Scientific/Engineering",
  "Topic :: Scientific/Engineering :: Mathematics",
  "Topic :: Scientific/Engineering :: Artificial Intelligence",
  "Topic :: Software Development",
  "Topic :: Software Development :: Libraries",
  "Topic :: Software Development :: Libraries :: Python Modules",
  "Topic :: System :: Distributed Computing",
]

dependencies = [
  "optuna>=3.1.0",
  "dask[distributed]",
  "rich",
]
dynamic = ["version"]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.optional-dependencies]
dev = ["black", "isort", "flake8", "mypy", "pandas", "pandas-stubs"]
test = ["pytest"]

[project.urls]
"Source" = "https://github.com/xadrianzetx/optuna-distributed"
"Bug Tracker" = "https://github.com/xadrianzetx/optuna-distributed/issues"

[tool.setuptools]
packages = ["optuna_distributed"]

[tool.setuptools.dynamic]
version = { attr = "optuna_distributed.__version__" }
readme = { file = "README.md" }

[tool.black]
line-length = 99
target-version = ["py310"]
exclude = '''
/(
    \.eggs
  | \.git
  | \.mypy_cache
  | \.vscode
  | env
  | build
  | dist
)/
'''

[tool.isort]
profile = "black"
src_paths = ["optuna_distributed", "tests", "examples"]
line_length = 99
lines_after_imports = 2
force_single_line = true
force_sort_within_sections = true
order_by_type = true

[tool.pytest.ini_options]
testpaths = ["tests"]

[tool.mypy]
python_version = "3.10"
warn_unused_configs = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
no_implicit_optional = true
warn_redundant_casts = true
strict_equality = true
strict_concatenate = true
exclude = ["env", "build", "examples"]
